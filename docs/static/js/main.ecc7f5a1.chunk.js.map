{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","cat","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAW9C,OACI,mCACI,sBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAKR,GAAc,SAACS,GAAD,OAAUT,EAAc,CAACE,GAAF,mBAAiBO,QACtFN,EAAc,KAKV,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAbU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,e,+BCR/CG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGzB,CAAEpB,IAEEqB,EDfwBK,CAAc1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAE/CoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEf,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEetBgB,EA7BM,WAAM,MAIazC,mBAAS,CAAC,cAJvB,mBAIhB0C,EAJgB,KAIJ3C,EAJI,KAQvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAACoB,EAAKC,GAAN,OACf,cAAC,EAAD,CAEI9B,SAAW6B,GADJA,Y,YClB/BE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ecc7f5a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => setInputValue(e.target.value);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        inputValue.trim().length > 2 && setCategories((cats) => setCategories([inputValue, ...cats]));\n        setInputValue('');\n    }\n    \n    return (\n        <>\n            <form onSubmit ={ handleSubmit }>\n                <input\n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                />\n            </form>\n\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Laa1gbx9pIN9nlCjae07GhL2k7jT2Quq&q=${ encodeURI( category ) }&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGriditem = ({ title, url }) => {\n \n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFecthGifs } from '../hooks/useFetchGifs';\nimport { GifGriditem } from './GifGriditem';\n\nexport const GifGrid = ({ category }) => {\n\n   const {data: images, loading} = useFecthGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {\n                loading && <p className=\"animate__animated animate__flash\">Loading...</p>\n            }\n            <div className=\"card-grid\">\n                {\n                    images.map(img =>\n                        <GifGriditem\n                            key={img.id}\n                            {...img}\n                        />\n                    )\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGif'\n\nexport const useFecthGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading:true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then( imgs => {\n\n                    setstate({\n                        data:imgs,\n                        loading:false\n                    });\n            });\n    }, [ category ])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One Punch', 'Naruto', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    //const handleAdd = (value) => setCategories([...categories, value]);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            {/* <button onClick={ handleAdd }> Agregar </button> */}\n\n            <ol>\n                { \n                    categories.map((cat, i) => \n                    <GifGrid \n                        key= { cat }\n                        category={ cat }\n                    />)\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport 'animate.css';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}